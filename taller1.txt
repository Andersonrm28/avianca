
-- Punto 2
     -- 2a
     CREATE TABLESPACE avianca DATAFILE 'avianca.dat' SIZE 2G ONLINE;

    -- 2b
    CREATE UNDO TABLESPACE undoavianca
        DATAFILE 'undoavianca_1a.dat'
        SIZE 25M AUTOEXTEND ON
        RETENTION GUARANTEE
        
-- Punto 3
ALTER SYSTEM SET UNDO_TABLESPACE = undoavianca;


-- Punto 4
CREATE USER usravianca
IDENTIFIED BY usravianca
DEFAULT TABLESPACE avianca
QUOTA UNLIMITED ON avianca;


GRANT CREATE SESSION, DBA TO usravianca

-- Punto 5

CREATE PROFILE CLERK LIMIT 
  PASSWORD_LIFE_TIME               40   -- dias
  SESSIONS_PER_USER                 1   -- Una por usuario
  IDLE_TIME                        10   -- minutos
  FAILED_LOGIN_ATTEMPTS             4;  -- Logins fallidos

CREATE PROFILE DEVELOPMENT LIMIT 
  PASSWORD_LIFE_TIME              100   -- dias
  SESSIONS_PER_USER                 2   -- Dos por usuario
  IDLE_TIME                        30   -- minutos
  FAILED_LOGIN_ATTEMPTS     UNLIMITED;  -- Logins ilimitados


-- Punto 6

CREATE USER user1
IDENTIFIED BY user1
DEFAULT TABLESPACE avianca;
GRANT CREATE SESSION TO user1;
ALTER USER user1 PROFILE CLERK;

CREATE USER user2
IDENTIFIED BY user2
DEFAULT TABLESPACE avianca;
GRANT CREATE SESSION TO user2;
ALTER USER user2 PROFILE CLERK;

CREATE USER user3
IDENTIFIED BY user3
DEFAULT TABLESPACE avianca;
GRANT CREATE SESSION TO user3;
ALTER USER user3 PROFILE DEVELOPMENT;

CREATE USER user4
IDENTIFIED BY user4
DEFAULT TABLESPACE avianca;
GRANT CREATE SESSION TO user4;
ALTER USER user4 PROFILE DEVELOPMENT;

-- Punto 7

ALTER USER user2 ACCOUNT LOCK;


-- Punto 8


CREATE TABLE CIUDADES (
    ID INTEGER PRIMARY KEY NOT NULL, 
    NOMBRE VARCHAR2(255) not null, 
    PAIS VARCHAR2(255) not null);
    
CREATE TABLE EMPLEADOS (
    ID INTEGER PRIMARY KEY NOT NULL,
    NUMERO_DOCUMENTO VARCHAR2(255) not null,
    NOMBRES VARCHAR2(255) not null,
    APELLIDOS VARCHAR2(255) not null,
    SEXO VARCHAR2(15) not null,
    FECHA_NACIMIENTO DATE not null,
    CARGO VARCHAR2(255) not null CHECK (CARGO IN ('Comandante', 'Primer Oficial','Auxiliar')),
    ANTIGUEDAD VARCHAR2(255) not null,
    FECHA_ULTIMO_ENTRENAMIENTO DATE not null,
    DIRECCION_RESIDENCIA VARCHAR2(255) not null,
    EMAIL VARCHAR2(255) not null,
    CELULAR NUMBER (20) not null,
    HORAS_DESCANSO_ULTIMO_VUELO NUMBER (4) not null,
    ESTADO VARCHAR2(255) not null CHECK (ESTADO IN ('En vuelo', 'Activo', 'Inactivo', 'Jubilado', 'Suspendido', 'Despedido', 'Entrenamiento', 'Licencia', 'Vacaciones')),
    UBICACION_ACTUAL_ID INTEGER, -- Fk a ciudades
    TIPO_DOCUMENTO_ID INTEGER); --Fk a documentos
    
CREATE TABLE PILOTOS (
    ID INTEGER PRIMARY KEY NOT NULL,
    NIVEL_INGLES VARCHAR2(255) not null CHECK (NIVEL_INGLES IN ('Nivel 1','Nivel 2','Nivel 3', 'Nivel 4', 'Nivel 5', 'Nivel 6')),
    CANTIDAD_HORAS_VUELO number (4),
    TIPO_LICENCIA VARCHAR2(255) not null CHECK (TIPO_LICENCIA IN ('CPL', 'ATPL')),
    EMPLEADO_ID INTEGER); -- Fk a empleados

CREATE TABLE AEROPUERTOS(
    ID INTEGER PRIMARY KEY NOT NULL,
    ABREVIATURA VARCHAR2(50) not null,
    NOMBRE VARCHAR2(255) not null,
    COORDENADAS VARCHAR2(255) not null,
    CIUDAD_ID INTEGER); -- Fk a ciudades
    
CREATE TABLE PASAJEROS(
    ID INTEGER PRIMARY KEY NOT NULL,
    NUMERO_DOCUMENTO VARCHAR2(255) not null,
    NOMBRES VARCHAR2(255) not null,
    APELLIDOS VARCHAR2(255) not null,
    TIPO_DOCUMENTO_ID INTEGER,
    PROGRAMACION_ID INTEGER); --Fk a documentos
    
CREATE TABLE TIPOS_DOCUMENTOS (
    ID INTEGER PRIMARY KEY NOT NULL,
    DESCRIPCION VARCHAR2(50) not null);
    
CREATE TABLE PROGRAMACIONES_EMPLEADOS (
    ID INTEGER PRIMARY KEY NOT NULL,
    PROGRAMACION_ID INTEGER, --Fk a programaciones
    EMPLEADO_ID INTEGER, -- Fk a empleados
    CARGO VARCHAR2(255) not null CHECK (CARGO IN ('Comandante','Primer Oficial','Auxiliar')));

CREATE TABLE RUTAS(
    ID INTEGER PRIMARY KEY NOT NULL,
    DISTANCIA INTEGER NOT NULL,
    CANTIDAD_PROMEDIO_HORAS DECIMAL(4,2) NOT NULL,
    AEROPUERTO_ORIGEN_ID INTEGER NOT NULL,
    AEROPUERTO_DESTINO_ID INTEGER NOT NULL);

CREATE TABLE VUELOS(
    ID INTEGER PRIMARY KEY NOT NULL,
    DESCRIPCION VARCHAR2(255) NOT NULL,
    FRECUENCIA_SEMANAL INTEGER NOT NULL,
    RUTAS_ID INTEGER NOT NULL);

CREATE TABLE AERONAVES(
    ID INTEGER PRIMARY KEY NOT NULL,
    MATRICULA VARCHAR2(255) NOT NULL,
    SERIAL NUMBER NOT NULL,
    EDAD VARCHAR2(255) NOT NULL,
    TIPO_AERONAVE_ID INTEGER NOT NULL);

CREATE TABLE TIPOS_AERONAVES(
    ID INTEGER PRIMARY KEY NOT NULL,
    MARCA VARCHAR2(255),
    DESCRIPCION VARCHAR2(255) NOT NULL,
    SILLAS_CLASE_ECONOMICA INTEGER NOT NULL,
    SILLAS_CLASE_EJECUTIVA INTEGER NOT NULL);

CREATE TABLE PROGRAMACIONES( --(TABLA PRINCIPAL)
    ID INTEGER PRIMARY KEY NOT NULL,
    FECHA DATE NOT NULL,
    HORA_ESTIMADA_SALIDA TIMESTAMP NOT NULL,
    HORA_REAL_SALIDA TIMESTAMP,
    HORA_ESTIMADA_LLEGADA TIMESTAMP NOT NULL,
    HORA_REAL_LLEGADA TIMESTAMP,
    DURACION_REAL_VUELO TIMESTAMP,
    CANTIDAD_PASAJEROS_EJECUTIVA INTEGER NOT NULL,
    CANTIDAD_PASAJEROS_TURISTA INTEGER NOT NULL,
    AERONAVE_ID  INTEGER NOT NULL, --Fk a aeronaves
    VUELO_ID INTEGER NOT NULL); -- Fk a vuelos

CREATE TABLE LOG_VUELOS(
    ID INTEGER PRIMARY KEY NOT NULL,
    TIMESTAMP TIMESTAMP NOT NULL,
    HORA_UTC TIMESTAMP WITH TIME ZONE NOT NULL,
    COORDENADAS NUMBER(*,2),
    ALTITUD DECIMAL(*,2),
    VELOCIDAD DECIMAL(*,2),
    DIRECCION DECIMAL(*,2),
    PROGRAMACION_ID INTEGER);

CREATE TABLE CHECKIN (
    ID INTEGER PRIMARY KEY NOT NULL,
    SILLA VARCHAR2(255) NOT NULL,
    PASAJERO_ID INTEGER NOT NULL,
    PROGRAMACIONES_ID INTEGER NOT NULL, 
    CONTACTO_EMERGENCIA VARCHAR2(255) NOT NULL,
    CIUDAD_CONTACTO_ID INTEGER not null,--Fk a ciudad
    EMAIL_CONTACTO VARCHAR2(255) NOT NULL,
    NUMERO_CONTACTO VARCHAR2(255) NOT NULL);

ALTER TABLE EMPLEADOS 
    ADD CONSTRAINT FK_EMPLEADOS_CIUDADES FOREIGN KEY (UBICACION_ACTUAL_ID) REFERENCES CIUDADES (ID);
ALTER TABLE EMPLEADOS 
    ADD CONSTRAINT FK_EMPLEADOS_DOCUMENTOS FOREIGN KEY (TIPOS_DOCUMENTO_ID) REFERENCES TIPO_DOCUMENTOS (ID);
ALTER TABLE PILOTOS 
    ADD CONSTRAINT FK_PILOTOS_EMPLEADOS FOREIGN KEY (EMPLEADO_ID) REFERENCES EMPLEADOS (ID);
    
ALTER TABLE PROGRAMACIONES 
    ADD CONSTRAINT FK_PROGRAMACIONES_AERONAVES FOREIGN KEY (AERONAVE_ID) REFERENCES AERONAVES (ID);
ALTER TABLE PROGRAMACIONES 
    ADD CONSTRAINT FK_PROGRAMACIONES_VUELOS FOREIGN KEY (VUELO_ID) REFERENCES VUELOS (ID);
    
ALTER TABLE LOG_VUELOS
ADD CONSTRAINT FK_LOGS_PROGRAMACIONES FOREIGN KEY (PROGRAMACION_ID) REFERENCES PROGRAMACIONES(ID);
  
ALTER TABLE AEROPUERTOS 
    ADD CONSTRAINT FK_AEROPUERTOS_CIUDADES FOREIGN KEY (CIUDAD_ID) REFERENCES CIUDADES(ID);
  
ALTER TABLE RUTAS
    ADD CONSTRAINT FK_RUTA_AEROPUERTO_ORIGEN FOREIGN KEY (AEROPUERTO_ORIGEN_ID) REFERENCES AEROPUERTOS(ID);  
ALTER TABLE RUTAS
    ADD CONSTRAINT FK_RUTA_AEROPUERTO_DESTINO FOREIGN KEY (AEROPUERTO_DESTINO_ID) REFERENCES AEROPUERTOS(ID);
  
ALTER TABLE VUELOS
    ADD CONSTRAINT FK_VUELOS_RUTAS FOREIGN KEY (RUTAS_ID) REFERENCES RUTAS(ID);
  
ALTER TABLE AERONAVES
    ADD CONSTRAINT FK_AERONAVES_TIPO_AERONAVE FOREIGN KEY (TIPO_AERONAVE_ID) REFERENCES TIPOS_AERONAVES(ID);  
ALTER TABLE AERONAVES
    ADD CONSTRAINT FK_AERONAVES_TIPO_AERONAVE FOREIGN KEY (TIPO_AERONAVE_ID) REFERENCES TIPOS_AERONAVES(ID);

ALTER TABLE CHECKIN
    ADD CONSTRAINT FK_CHECKIN_PROGRAMACIONES FOREIGN KEY (PROGRAMACIONES_ID) REFERENCES PROGRAMACIONES(ID);  
ALTER TABLE CHECKIN
    ADD CONSTRAINT FK_CHECKIN_PASAJEROS FOREIGN KEY (PASAJERO_ID) REFERENCES PASAJEROS(ID);
  
ALTER TABLE PASAJEROS
    ADD CONSTRAINT FK_PASAJEROS_TIPO_DOCUMENTO FOREIGN KEY (TIPOS_DOCUMENTO_ID) REFERENCES TIPO_DOCUMENTOS(ID);
 
ALTER TABLE PROGRAMACIONES_EMPLEADOS
    ADD CONSTRAINT FK_PROGR_EMP_EMP FOREIGN KEY (EMPLEADO_ID) REFERENCES EMPLEADOS(ID);    
ALTER TABLE PROGRAMACIONES_EMPLEADOS
    ADD CONSTRAINT FK_PROGR_EMP_PROG FOREIGN KEY (PROGRAMACION_ID) REFERENCES PROGRAMACIONES(ID);

CREATE SEQUENCE AERONAVES_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE AEROPUERTOS_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE CHECKIN_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE CIUDADES_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE EMPLEADOS_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE LOG_VUELOS_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE PASAJEROS_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE PILOTOS_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE PROGRAMACIONES_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE PROG_EMPL_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE RUTAS_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE TIPO_AERO_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE TIPO_DOC_ID
INCREMENT BY 1
START WITH 1;

CREATE SEQUENCE VUELOS_ID
INCREMENT BY 1
START WITH 1;


